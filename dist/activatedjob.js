/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.gateway_protocol.ActivatedJob');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway_protocol.ActivatedJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gateway_protocol.ActivatedJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway_protocol.ActivatedJob.displayName = 'proto.gateway_protocol.ActivatedJob';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway_protocol.ActivatedJob.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway_protocol.ActivatedJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway_protocol.ActivatedJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway_protocol.ActivatedJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    processinstancekey: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bpmnprocessid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    processdefinitionversion: jspb.Message.getFieldWithDefault(msg, 5, 0),
    processkey: jspb.Message.getFieldWithDefault(msg, 6, 0),
    elementid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    elementinstancekey: jspb.Message.getFieldWithDefault(msg, 8, 0),
    customheaders: jspb.Message.getFieldWithDefault(msg, 9, ""),
    worker: jspb.Message.getFieldWithDefault(msg, 10, ""),
    retries: jspb.Message.getFieldWithDefault(msg, 11, 0),
    deadline: jspb.Message.getFieldWithDefault(msg, 12, 0),
    variables: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway_protocol.ActivatedJob}
 */
proto.gateway_protocol.ActivatedJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway_protocol.ActivatedJob;
  return proto.gateway_protocol.ActivatedJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway_protocol.ActivatedJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway_protocol.ActivatedJob}
 */
proto.gateway_protocol.ActivatedJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProcessinstancekey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBpmnprocessid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProcessdefinitionversion(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProcesskey(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setElementinstancekey(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomheaders(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorker(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetries(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeadline(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariables(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway_protocol.ActivatedJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway_protocol.ActivatedJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway_protocol.ActivatedJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway_protocol.ActivatedJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProcessinstancekey();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBpmnprocessid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProcessdefinitionversion();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getProcesskey();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getElementid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getElementinstancekey();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getCustomheaders();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWorker();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRetries();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getDeadline();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getVariables();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional int64 key = 1;
 * @return {number}
 */
proto.gateway_protocol.ActivatedJob.prototype.getKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gateway_protocol.ActivatedJob.prototype.setKey = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.gateway_protocol.ActivatedJob.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gateway_protocol.ActivatedJob.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 processInstanceKey = 3;
 * @return {number}
 */
proto.gateway_protocol.ActivatedJob.prototype.getProcessinstancekey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gateway_protocol.ActivatedJob.prototype.setProcessinstancekey = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string bpmnProcessId = 4;
 * @return {string}
 */
proto.gateway_protocol.ActivatedJob.prototype.getBpmnprocessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.gateway_protocol.ActivatedJob.prototype.setBpmnprocessid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 processDefinitionVersion = 5;
 * @return {number}
 */
proto.gateway_protocol.ActivatedJob.prototype.getProcessdefinitionversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.gateway_protocol.ActivatedJob.prototype.setProcessdefinitionversion = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 processKey = 6;
 * @return {number}
 */
proto.gateway_protocol.ActivatedJob.prototype.getProcesskey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.gateway_protocol.ActivatedJob.prototype.setProcesskey = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string elementId = 7;
 * @return {string}
 */
proto.gateway_protocol.ActivatedJob.prototype.getElementid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.gateway_protocol.ActivatedJob.prototype.setElementid = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 elementInstanceKey = 8;
 * @return {number}
 */
proto.gateway_protocol.ActivatedJob.prototype.getElementinstancekey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.gateway_protocol.ActivatedJob.prototype.setElementinstancekey = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string customHeaders = 9;
 * @return {string}
 */
proto.gateway_protocol.ActivatedJob.prototype.getCustomheaders = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.gateway_protocol.ActivatedJob.prototype.setCustomheaders = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string worker = 10;
 * @return {string}
 */
proto.gateway_protocol.ActivatedJob.prototype.getWorker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.gateway_protocol.ActivatedJob.prototype.setWorker = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 retries = 11;
 * @return {number}
 */
proto.gateway_protocol.ActivatedJob.prototype.getRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.gateway_protocol.ActivatedJob.prototype.setRetries = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 deadline = 12;
 * @return {number}
 */
proto.gateway_protocol.ActivatedJob.prototype.getDeadline = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.gateway_protocol.ActivatedJob.prototype.setDeadline = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string variables = 13;
 * @return {string}
 */
proto.gateway_protocol.ActivatedJob.prototype.getVariables = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.gateway_protocol.ActivatedJob.prototype.setVariables = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


